{"version":3,"sources":["components/AddressInput.js","components/ApiKeyInput.js","components/LimitHolderInput.js","App.js","reportWebVitals.js","index.js"],"names":["AddressInput","props","rounded","width","type","onChange","handleTokenAddressChange","undefined","tokenHolders","ApiKeyInput","placeholder","apiKey","handleApiKeyChange","LimitHolderInput","handleLimitHoldersChange","App","useState","setLoading","setTokenHolders","input","setInput","limitHolders","setLimitHolders","setApiKey","darkMode","setDarkMode","inputTokenInfo","setInputTokenInfo","addressInputError","setAddressInputError","limitInputError","setLimitInputError","networkErrorOccured","setNetworkErrorOccured","networkError","setNetworkError","baseUrl","tokenHoldersRequest","axios","get","tokenAddressRequest","tokenRequests","handleNetworkError","error","console","log","response","data","status","headers","request","message","config","ErrorComponent","addressError","dark","limitError","networkErrorHappened","networkErrorObject","TokenInfoComponent","tokenInfo","name","symbol","price","rate","toFixed","owner","holdersCount","OtherTokenListComponent","otherTokens","map","otherToken","index","active","raised","className","OtherTokenComponent","address","balance","decimals","otherTokenBalance","href","target","HoldersOtherHoldingsComponent","tokens","sort","a","b","length","HolderListItemComponent","showOtherTokens","setShowOtherTokens","showOtherTokensButtonPressed","setShowOtherTokensButtonPressed","tokenHoldersOtherHoldings","setTokenHoldersOtherHoldings","useEffect","isMounted","getTokens","addressInfoApiUrl","then","addressInfoResponse","catch","holdersBalance","holdersValue","share","color","bgColor","onClick","event","flat","HolderListComponent","numHolders","holder","getTokenHoldersAndInfo","all","spread","holdersResponse","tokenAddressResponse","holders","depressed","changedInput","newInput","value","changedApiKey","newApiKey","changedLimitHolders","newLimitHolders","parseInt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151b077a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { TextField } from 'ui-neumorphism';\r\n  \r\nconst AddressInput = (props) => \r\n  <>\r\n    <h2> ERC20 Token Address </h2>\r\n    <TextField \r\n      rounded\r\n      width={500} \r\n      type=\"text\" \r\n      onChange={props.handleTokenAddressChange} />\r\n    <p> { props.tokenHolders == undefined? \r\n          \"Ex.: 0xe28b3B32B6c345A34Ff64674606124Dd5Aceca30\"\r\n          :\"\" } \r\n    </p>\r\n  </>\r\n\r\nexport default AddressInput;","import React from 'react';\r\nimport { TextField } from 'ui-neumorphism';\r\n  \r\nconst ApiKeyInput = (props) => \r\n    <>\r\n        <h2>API-Key</h2>\r\n        <TextField \r\n            rounded\r\n            type=\"text\" \r\n            placeholder={props.apiKey} \r\n            onChange={props.handleApiKeyChange}\r\n        />\r\n        <p> {props.tokenHolders == undefined? \r\n             \"Ex.: EK-nYME2-u6tTYfo-L5LES\"\r\n             :\"\" } \r\n        </p>\r\n    </>\r\n\r\nexport default ApiKeyInput;","import React from 'react';\r\nimport { TextField } from 'ui-neumorphism';\r\n\r\nconst LimitHolderInput = (props) => \r\n<>\r\n    <h2> # of Top Holders </h2>\r\n    <TextField \r\n        rounded\r\n        width={100} \r\n        type=\"text\" \r\n        placeholder=\"10\" \r\n        onChange={props.handleLimitHoldersChange} />\r\n    <p> { props.tokenHolders == undefined? \r\n            \"1-1000\"\r\n            :\"\" } \r\n    </p>\r\n</>\r\n\r\nexport default LimitHolderInput;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport 'ui-neumorphism/dist/index.css';\r\n/* UI library component imports */\r\nimport { overrideThemeVariables } from 'ui-neumorphism';\r\nimport { \r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  ListItemGroup,\r\n  ListItem,\r\n  H5,\r\n  H6,\r\n  Body1,\r\n  Alert\r\n  } from 'ui-neumorphism';\r\n\r\nimport AddressInput from './components/AddressInput';\r\nimport ApiKeyInput from './components/ApiKeyInput';\r\nimport LimitHolderInput from './components/LimitHolderInput';\r\n\r\nfunction App() {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tokenHolders, setTokenHolders] = useState(null);\r\n  const [input, setInput] = useState(\"\");\r\n  const [limitHolders, setLimitHolders] = useState(10);\r\n  const [apiKey, setApiKey] = useState(\"EK-nYME2-u6tTYfo-L5LES\");\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [inputTokenInfo, setInputTokenInfo] = useState(null);\r\n  \r\n  const [addressInputError, setAddressInputError] = useState(false);\r\n  const [limitInputError, setLimitInputError] = useState(false);\r\n  const [networkErrorOccured, setNetworkErrorOccured] = useState(false);\r\n  const [networkError, setNetworkError] = useState(null);\r\n\r\n  const baseUrl = \"https://api.ethplorer.io\";\r\n  const tokenholdersApiUrl = () => `${baseUrl}/getTopTokenHolders/${input}?apiKey=${apiKey}&limit=${limitHolders}`;\r\n  const tokenAddressApiUrl = () => `${baseUrl}/getAddressInfo/${input}?apiKey=${apiKey}`;\r\n  const tokenHoldersRequest = () => axios.get(tokenholdersApiUrl());\r\n  const tokenAddressRequest = () => axios.get(tokenAddressApiUrl());\r\n  const tokenRequests = () => [ tokenHoldersRequest(), tokenAddressRequest() ];\r\n\r\n  const inputIsInvalid = () => addressInputError || limitInputError || networkErrorOccured\r\n\r\n  useEffect(() => {\r\n\r\n    if (inputIsInvalid() || input == \"\") return ;\r\n    setLoading(true);\r\n\r\n    async function getTokenHoldersAndInfo() {\r\n      axios\r\n        .all(tokenRequests())\r\n        .then(axios.spread(\r\n          (holdersResponse, tokenAddressResponse) => {\r\n            setLoading(false);\r\n            setTokenHolders(holdersResponse.data.holders);\r\n            setInputTokenInfo(tokenAddressResponse.data.tokenInfo);\r\n          }\r\n        )\r\n      ).catch( error => handleNetworkError(error) );\r\n    }\r\n    getTokenHoldersAndInfo();\r\n    return () => setLoading(false);\r\n  },\r\n  [input, apiKey, limitHolders]); \r\n\r\n  /** Handler Functions for Input changes and simple input validation **/\r\n  function handleTokenAddressChange(changedInput) {\r\n\t  const newInput = changedInput.event.target.value;\r\n\t  /** all ethereum token addresses are 42 characters long **/\r\n\t  if (newInput.length == 42){\r\n\t\t  setAddressInputError(false);\r\n\t\t  setInput(newInput);\r\n\t    } \r\n      else {\r\n\t\t  setAddressInputError(true);\r\n\t    }\r\n    }\r\n  \r\n  function handleApiKeyChange(changedApiKey) {\r\n\t  const newApiKey = changedApiKey.event.target.value;\r\n      setApiKey(newApiKey);\r\n    }\r\n\t\r\n  function handleLimitHoldersChange(changedLimitHolders) {\r\n\t  const newLimitHolders = changedLimitHolders.event.target.value;\r\n\t  /** parseInt converts floats to ints and returns NaN when input is string **/\r\n\t  if (parseInt(newLimitHolders) > 0 \r\n        && parseInt(newLimitHolders) <= 1000){\r\n          setLimitInputError(false);\r\n          setLimitHolders(newLimitHolders);\r\n\t  }\r\n\t  else {\r\n\t\t  setLimitInputError(true);\r\n\t    }\r\n    }\r\n\r\n  function handleNetworkError(error){\r\n    setNetworkErrorOccured(true);\r\n    setNetworkError(error);\r\n    console.log(\"NETWORK ERROR\");\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n      // http.ClientRequest in node.js\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n    console.log(error.config);\r\n  }\r\n  \r\n  /** OUTPUT Components **/\r\n\r\n  function ErrorComponent(props){\r\n    /** renders possible input errors to the user */\r\n    \r\n    return(\r\n      <>\r\n        {props.addressError?\r\n          <Alert \r\n            dark={darkMode}\r\n            type=\"error\">\r\n              Input Error : invalid Token Address input\r\n          </Alert>\r\n          : \"\"\r\n        }\r\n\r\n        {props.limitError?\r\n          <Alert \r\n            dark={darkMode}\r\n            type=\"error\">\r\n              Input Error : only integers between 1-1000 allowed for # of Top Holders\r\n          </Alert>\r\n          : \"\"\r\n        }\r\n\r\n        {props.networkErrorHappened?\r\n          <Alert \r\n            dark={darkMode}\r\n            type=\"error\">\r\n              Network Error occured, Check Console { (props.networkErrorObject == null)? \"\" : props.networkErrorObject.message }\r\n          </Alert>\r\n          : \"\"\r\n        }\r\n\r\n      </>\r\n    );\r\n  }\r\n  \r\n  function TokenInfoComponent(props){\r\n\t  /** shows info about the token from address input **/\r\n   \r\n\t  /**  tokenInfo only gets accessible after first API call\r\n     * so we do a little bit of conditional rendering here **/\r\n     if (!props.tokenInfo) return \"\";\r\n\t  return(\r\n\t    <>\r\n        {props.tokenInfo?\r\n          <CardContent\r\n            dark={darkMode}>\r\n              <H6> {`${props.tokenInfo.name} (${props.tokenInfo.symbol})`} </H6>\r\n              <H6> Price: {props.tokenInfo.price.rate? \r\n                            props.tokenInfo.price.rate.toFixed(2)\r\n                            :  \"unknown price\"} $ \r\n              </H6>\r\n              <Body1>\r\n                Owner: {props.tokenInfo.owner}\r\n              </Body1>\r\n              <Body1>  \r\n                Holders: {props.tokenInfo.holdersCount}\r\n              </Body1>\r\n            \r\n          </CardContent>\r\n          : \"\"\r\n          }\r\n\t\t  </>\r\n\t\t);\r\n\t  \r\n  }\r\n\r\n  function OtherTokenListComponent(props){\r\n    /* Holds List of the other tokens held by parent address */\r\n    return(\r\n      <>\r\n        {props.otherTokens.map((otherToken, index) => {\r\n          return(\r\n            <ListItem\r\n              key={index}\r\n              dark={darkMode}\r\n              active\r\n              raised\r\n              rounded\r\n              className=\"OtherTokenListItem-class\"> \r\n\r\n                <OtherTokenComponent\r\n                  address={otherToken.tokenInfo.address}\r\n                  name={otherToken.tokenInfo.name}\r\n                  index={index}\r\n                  symbol={otherToken.tokenInfo.symbol}\r\n                  balance={otherToken.balance}\r\n                  decimals={otherToken.tokenInfo.decimals > 0? otherToken.tokenInfo.decimals : 1}\r\n                  price={otherToken.tokenInfo.price.rate}/>\r\n\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  function OtherTokenComponent(props){\r\n\t  /** gives info about the other token that parent hodler has **/\r\n    \r\n    const otherTokenBalance = (props.balance / 10 ** props.decimals).toFixed(5);\r\n    return (\r\n      <> \r\n        <H6 dark={darkMode}>\r\n          <a \r\n            href={`https://etherscan.io/token/${props.address}`} \r\n            target=\"_blank\">\r\n              {`${props.name} (${props.symbol})`}\r\n          </a>\r\n        </H6>\r\n        <H6 \r\n          dark={darkMode}> \r\n            Tokens: {otherTokenBalance} \r\n        </H6>\r\n        <H6 \r\n          dark={darkMode}> \r\n            {props.price?\r\n              `Value: ${(props.price * otherTokenBalance).toFixed(2)} $` \r\n              : `price rate unknown`} \r\n        </H6>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  function HoldersOtherHoldingsComponent(props){\r\n\t  /** Shows other Tokens of parent holder \r\n     *  address once UI Button is pressed **/\r\n\r\n    /* tokens are sorted based on value in descending order\r\n        calculated by custom comparison function  */\r\n   \r\n    const sortedOtherTokens = props.tokens.sort(\r\n        (a,b) => {\r\n          if(a.tokenInfo.price && b.tokenInfo.price){\r\n            return ( \r\n              ( (b.balance / 10 ** b.tokenInfo.decimals ) \r\n              * b.tokenInfo.price.rate \r\n              - (a.balance / 10 ** a.tokenInfo.decimals ) \r\n              * a.tokenInfo.price.rate) \r\n              );\r\n          }\r\n          else if(a.tokenInfo.price && !b.tokenInfo.price){\r\n            return -1;\r\n          }\r\n          else if(!a.tokenInfo.price && b.tokenInfo.price){\r\n            return 1;\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n    );\r\n\r\n\t  return(\r\n\t    <>\r\n        <H6 dark={darkMode}>{props.tokens.length > 1 ?\r\n            `${props.tokens.length} other Tokens held by this address`\r\n            : `${props.tokens.length} other Token held by this address`\r\n            }  \r\n        </H6>\r\n        <OtherTokenListComponent\r\n          otherTokens={props.tokens}/>\r\n      </>\r\n\t    );\r\n  }\r\n  \r\n  \r\n  function HolderListItemComponent(props){\r\n\t  /** is showing the holder of token from address input **/\r\n\t  const [showOtherTokens, setShowOtherTokens] = useState(false);\r\n\t  const [showOtherTokensButtonPressed, setShowOtherTokensButtonPressed] = useState(false);\r\n\t  const [tokenHoldersOtherHoldings, setTokenHoldersOtherHoldings] = useState();\r\n\t  \r\n\t  useEffect( () => {\r\n\t\t \r\n\t\t  /** condition to avoid the warning of hook usage before component mounting **/\r\n\t\t  let isMounted = true;\r\n\t\t  /** prevent apicall if not intended **/\r\n\t\t  if(!showOtherTokens) return ;\r\n\t\t  /** prevent apicall of wrong address or apiKey input **/\r\n\t\t  if (!props.address === \"\" || !props.address || !props.apiKey){\r\n\t\t\t  return ;\r\n\t\t    }\r\n\t\t  \r\n\t\t  async function getTokens(){\r\n\t\t\t  const addressInfoApiUrl = \r\n          `https://api.ethplorer.io/getAddressInfo/${props.address}?apiKey=${props.apiKey}`;\r\n\t\t      await axios.get(addressInfoApiUrl)\r\n\t\t        .then((addressInfoResponse) => {\r\n\t\t\t        if (isMounted) setTokenHoldersOtherHoldings(addressInfoResponse.data);\r\n              })\r\n            .catch((error)=> {\r\n              handleNetworkError(error);\r\n            });\r\n\t\t    }\r\n\r\n\t\t  getTokens();\r\n\t\t\t/** cleanup function **/\r\n\t\t  return () => { isMounted = false };\r\n\t\t } \r\n\t\t,[showOtherTokens]);\r\n\t\t\r\n\t  function handleShowOtherTokensButtonPressed(event){\r\n\t\t  setShowOtherTokens(!showOtherTokens);\r\n\t\t  setShowOtherTokensButtonPressed(!showOtherTokensButtonPressed);\r\n\t  }\r\n\r\n\t\tconst holdersBalance = (props.balance/ 10 ** props.decimals).toFixed(2);\r\n    const holdersValue = (props.price * holdersBalance).toFixed(2);\r\n\r\n\t  /**  tokenHoldersOtherHoldings only gets accessible after first apicall  **/\r\n    /** and holders other tokens only after pressing the listitems button **/  \r\n\t  return(\r\n      <>\r\n        <H5 dark={darkMode}> #{props.index + 1} </H5>\r\n        <H5 dark={darkMode}> Share: {props.share} % </H5>\r\n        <H5 dark={darkMode}> \r\n          Tokens: {holdersBalance}\r\n        </H5>\r\n        <H5 dark={darkMode}> Value: {holdersValue} $ </H5>\r\n        <H5 dark={darkMode}> \r\n          Address: <a \r\n                    href={`https://etherscan.io/address/${props.address}`} \r\n                    target=\"_blank\">\r\n                      {props.address}\r\n                  </a> \r\n        </H5>\r\n        \r\n\r\n        <Button \r\n          className=\"showOtherTokensButton\"\r\n          color={showOtherTokensButtonPressed? 'var(--black)' : 'var(--white)'}\r\n          bgColor={showOtherTokensButtonPressed? 'var(--primary-red)' : 'var(--primary)'}\r\n          dark={darkMode}\r\n          rounded\r\n          onClick={handleShowOtherTokensButtonPressed}> \r\n            {!showOtherTokens? \"Show Holders other tokens\" : \"Hide Holders other tokens\" } \r\n        </Button>\r\n          {tokenHoldersOtherHoldings && showOtherTokens?\r\n            <Card\r\n              flat\r\n              width={400}\r\n              dark={darkMode}\r\n              className=\"HoldersOtherHoldingsComponent-container\"\r\n              >\r\n                <HoldersOtherHoldingsComponent  \r\n                tokens={tokenHoldersOtherHoldings.tokens} />   \r\n            </Card>\r\n            : \"\"\r\n            }\r\n\t\t    </>\r\n\t\t  );\r\n  }\r\n  \r\n  function HolderListComponent(props){\r\n\t  /** Lists the top (# of) Holders of input token address  **/\r\n    \r\n\r\n    if (props.tokenHolders == null|| props.tokenInfo == null) return \"\";\r\n    return (\r\n      <>\r\n        <H5 \r\n          className='list-head'\r\n          dark={darkMode}>\r\n            Tokens Top {props.numHolders} Holders\r\n        </H5>\r\n\r\n        <ListItemGroup\r\n          rounded\r\n          dark={darkMode}\r\n          raised>\r\n                    \r\n            {props.tokenHolders.map((holder, index) => {\r\n              return(\r\n                <ListItem\r\n                  className=\"ListItem-class\"\r\n                  active\r\n                  dark={darkMode}\r\n                  key={index}\r\n                  raised\r\n                  rounded>\r\n                    <HolderListItemComponent\r\n                      index={index}\r\n                      key={holder[\"address\"] + index}\r\n                      decimals={props.tokenInfo.decimals ? props.tokenInfo.decimals : \"18 \"} \r\n                      price={props.tokenInfo.price.rate ? props.tokenInfo.price.rate : \"1 \"} \r\n                      address={holder[\"address\"]}\r\n                      balance={holder[\"balance\"]}\r\n                      share={holder[\"share\"]}\r\n                      apiKey={props.apiKey}/>\r\n                </ListItem>\r\n                  );\r\n                }\r\n                )\r\n              }\r\n        </ListItemGroup>\r\n      </>\r\n      );\r\n  }\r\n\r\n \r\n  function changeTheme(props){\r\n\t   /** This function can be used to override css values */\r\n\t  overrideThemeVariables({\r\n      '--light-bg': '#E9B7B9'\r\n    });\r\n  }\r\n\t\r\n  function darkModeToggle(event) {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  return (\r\n  \r\n    <Card className=\"App\"\r\n\t    dark={darkMode}>\r\n      \r\n      <Card \r\n        dark={darkMode} \r\n        rounded={true} \r\n        width={700} \r\n        className=\"UserInput-container\">\r\n\r\n          <h1>Tokenholders Other Holdings</h1>\r\n\r\n          <Button\r\n            onClick={darkModeToggle}\r\n            rounded\r\n            depressed\r\n            color={darkMode?\"var(--white)\":\"var(--primary)\"}>\r\n              {!darkMode?\"dark-mode\":\"light-mode\"}\r\n          </Button>\r\n\r\n          <AddressInput \r\n            handleTokenAddressChange={handleTokenAddressChange}\r\n            tokenHolders={tokenHolders}\r\n          />\r\n\r\n          <Card \r\n            dark={darkMode} \r\n            rounded\r\n            flat\r\n            width={500} \r\n            className=\"InputComponent-container\">\r\n              <ApiKeyInput\r\n                apiKey={apiKey}\r\n                handleApiKeyChange={handleApiKeyChange}\r\n                tokenHolders={tokenHolders}\r\n              />\r\n          </Card>\r\n\r\n          <Card \r\n            dark={darkMode} \r\n            rounded\r\n            flat\r\n            width={500} \r\n            className=\"InputComponent-container\">\r\n              <LimitHolderInput\r\n                handleLimitHoldersChange={handleLimitHoldersChange}\r\n                tokenHolders={tokenHolders}\r\n              />\r\n          </Card>\r\n          \r\n          <Card \r\n            dark={darkMode}\r\n            width={200} \r\n            className=\"TokenInfoComponent-container\">\r\n              <TokenInfoComponent \r\n                tokenInfo={inputTokenInfo} />\r\n          </Card>\r\n\r\n          <Card \r\n            dark={darkMode}\r\n            width={300} \r\n            className=\"ErrorComponent-container\">\r\n              <ErrorComponent \r\n                addressError={addressInputError} \r\n                limitError={limitInputError} \r\n                networkErrorHappened={networkErrorOccured}\r\n                networkErrorObject={networkError}\r\n                />\r\n          </Card>\r\n\r\n      </Card>\r\n\r\n      <Card \r\n        dark={darkMode} \r\n        rounded\r\n        width={700}\r\n        className=\"HolderListComponent-container\">\r\n          <HolderListComponent \r\n            tokenHolders={tokenHolders}\r\n            numHolders={limitHolders}\r\n            tokenInfo={inputTokenInfo}\r\n            apiKey={apiKey}/>\r\n      </Card>\r\n      \r\n      <footer>\r\n          <Card \r\n            dark={darkMode} \r\n            className='footer'>\r\n              <p>Built with 💚 by <a \r\n                                    href=\"https://github.com/SimRunBot\"\r\n                                    target=\"_blank\">\r\n                                      Simon\r\n                                  </a>\r\n              </p>\r\n              <p>powered by <a \r\n                              href=\"https://Ethplorer.io\" \r\n                              target=\"_blank\">\r\n                                Ethplorer.io\r\n                            </a> \r\n              </p>\r\n            </Card>\r\n        </footer>\r\n\t  \r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}