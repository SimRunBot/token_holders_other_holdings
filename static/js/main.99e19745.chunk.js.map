{"version":3,"sources":["components/AddressInput.js","components/ApiKeyInput.js","components/LimitHolderInput.js","components/ErrorOutput.js","components/TokenInfo.js","components/OtherToken.js","components/OtherTokenList.js","components/HoldersOtherHoldings.js","components/HolderListItem.js","components/HolderList.js","App.js","reportWebVitals.js","index.js"],"names":["AddressInput","props","rounded","width","type","onChange","handleTokenAddressChange","undefined","tokenHolders","ApiKeyInput","placeholder","apiKey","handleApiKeyChange","LimitHolderInput","handleLimitHoldersChange","ErrorOutput","addressError","dark","darkMode","limitError","networkErrorHappened","networkErrorObject","message","TokenInfo","tokenInfo","name","symbol","price","rate","toFixed","owner","holdersCount","OtherToken","otherTokenBalance","balance","decimals","href","address","target","OtherTokenList","otherTokens","map","otherToken","index","active","raised","className","HoldersOtherHoldings","tokens","sort","a","b","length","HolderListItem","useState","showOtherTokens","setShowOtherTokens","showOtherTokensButtonPressed","setShowOtherTokensButtonPressed","tokenHoldersOtherHoldings","setTokenHoldersOtherHoldings","useEffect","isMounted","getTokens","addressInfoApiUrl","axios","get","then","addressInfoResponse","data","catch","error","handleNetworkError","holdersBalance","holdersValue","share","color","bgColor","onClick","event","flat","HolderList","numHolders","holder","App","setTokenHolders","input","setInput","limitHolders","setLimitHolders","setApiKey","setDarkMode","inputTokenInfo","setInputTokenInfo","addressInputError","setAddressInputError","limitInputError","setLimitInputError","networkErrorOccured","setNetworkErrorOccured","networkError","setNetworkError","baseUrl","tokenHoldersRequest","tokenAddressRequest","tokenRequests","console","log","response","status","headers","request","config","getTokenHoldersAndInfo","all","spread","holdersResponse","tokenAddressResponse","holders","depressed","changedInput","newInput","value","changedApiKey","newApiKey","changedLimitHolders","newLimitHolders","parseInt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99e19745.chunk.js","sourcesContent":["import React from 'react';\r\nimport { TextField } from 'ui-neumorphism';\r\n  \r\nconst AddressInput = (props) => \r\n  <>\r\n    <h2> ERC20 Token Address </h2>\r\n    <TextField \r\n      rounded\r\n      width={500} \r\n      type=\"text\" \r\n      onChange={props.handleTokenAddressChange} />\r\n    <p> { props.tokenHolders == undefined? \r\n          \"Ex.: 0xe28b3B32B6c345A34Ff64674606124Dd5Aceca30\"\r\n          :\"\" } \r\n    </p>\r\n  </>\r\n\r\nexport default AddressInput;","import React from 'react';\r\nimport { TextField } from 'ui-neumorphism';\r\n  \r\nconst ApiKeyInput = (props) => \r\n    <>\r\n        <h2>API-Key</h2>\r\n        <TextField \r\n            rounded\r\n            type=\"text\" \r\n            placeholder={props.apiKey} \r\n            onChange={props.handleApiKeyChange}\r\n        />\r\n        <p> {props.tokenHolders == undefined? \r\n             \"Ex.: EK-nYME2-u6tTYfo-L5LES\"\r\n             :\"\" } \r\n        </p>\r\n    </>\r\n\r\nexport default ApiKeyInput;","import React from 'react';\r\nimport { TextField } from 'ui-neumorphism';\r\n\r\nconst LimitHolderInput = (props) => \r\n<>\r\n    <h2> # of Top Holders </h2>\r\n    <TextField \r\n        rounded\r\n        width={100} \r\n        type=\"text\" \r\n        placeholder=\"10\" \r\n        onChange={props.handleLimitHoldersChange} />\r\n    <p> { props.tokenHolders == undefined? \r\n            \"1-1000\"\r\n            :\"\" } \r\n    </p>\r\n</>\r\n\r\nexport default LimitHolderInput;","import React from 'react';\r\nimport { Alert } from 'ui-neumorphism';\r\n\r\nfunction ErrorOutput(props){\r\n    /** renders possible input errors to the user */\r\n    \r\n    return(\r\n      <>\r\n        {props.addressError?\r\n          <Alert \r\n            dark={props.darkMode}\r\n            type=\"error\">\r\n              Input Error : invalid Token Address input\r\n          </Alert>\r\n          : \"\"\r\n        }\r\n\r\n        {props.limitError?\r\n          <Alert \r\n            dark={props.darkMode}\r\n            type=\"error\">\r\n              Input Error : only integers between 1-1000 allowed for # of Top Holders\r\n          </Alert>\r\n          : \"\"\r\n        }\r\n\r\n        {props.networkErrorHappened?\r\n          <Alert \r\n            dark={props.darkMode}\r\n            type=\"error\">\r\n              Network Error occured, Check Console { (props.networkErrorObject == null)? \"\" : props.networkErrorObject.message }\r\n          </Alert>\r\n          : \"\"\r\n        }\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ErrorOutput;","import React from 'react';\r\nimport { CardContent,H6,Body1 } from 'ui-neumorphism';\r\n\r\nfunction TokenInfo(props){\r\n    /** shows info about the token from address input **/\r\n \r\n    /**  tokenInfo only gets accessible after first API call\r\n   * so we do a little bit of conditional rendering here **/\r\n   if (!props.tokenInfo) return \"\";\r\n    return(\r\n      <>\r\n      {props.tokenInfo?\r\n        <CardContent\r\n          dark={props.darkMode}>\r\n            <H6> {`${props.tokenInfo.name} (${props.tokenInfo.symbol})`} </H6>\r\n            <H6> Price: {props.tokenInfo.price.rate? \r\n                          props.tokenInfo.price.rate.toFixed(2)\r\n                          :  \"unknown price\"} $ \r\n            </H6>\r\n            <Body1>\r\n              Owner: {props.tokenInfo.owner}\r\n            </Body1>\r\n            <Body1>  \r\n              Holders: {props.tokenInfo.holdersCount}\r\n            </Body1>\r\n          \r\n        </CardContent>\r\n        : \"\"\r\n        }\r\n        </>\r\n      );\r\n    \r\n}\r\n\r\nexport default TokenInfo;","import React from 'react';\r\nimport { H6 } from 'ui-neumorphism';\r\n\r\nfunction OtherToken(props){\r\n    /** gives info about the other token that parent hodler has **/\r\n  \r\n  const otherTokenBalance = (props.balance / 10 ** props.decimals).toFixed(5);\r\n  return (\r\n    <> \r\n      <H6 dark={props.darkMode}>\r\n        <a \r\n          href={`https://etherscan.io/token/${props.address}`} \r\n          target=\"_blank\">\r\n            {`${props.name} (${props.symbol})`}\r\n        </a>\r\n      </H6>\r\n      <H6 \r\n        dark={props.darkMode}> \r\n          Tokens: {otherTokenBalance} \r\n      </H6>\r\n      <H6 \r\n        dark={props.darkMode}> \r\n          {props.price?\r\n            `Value: ${(props.price * otherTokenBalance).toFixed(2)} $` \r\n            : `price rate unknown`} \r\n      </H6>\r\n    </>\r\n  );\r\n}\r\nexport default OtherToken;","import React from 'react';\r\nimport { ListItem } from 'ui-neumorphism';\r\nimport OtherToken from \"./OtherToken.js\";\r\n\r\nfunction OtherTokenList(props){\r\n    /* Holds List of the other tokens held by parent address */\r\n    return(\r\n      <>\r\n        {props.otherTokens.map((otherToken, index) => {\r\n          return(\r\n            <ListItem\r\n              key={index}\r\n              dark={props.darkMode}\r\n              active\r\n              raised\r\n              rounded\r\n              className=\"OtherTokenListItem-class\"> \r\n\r\n                <OtherToken\r\n                  darkMode={props.darkMode}\r\n                  address={otherToken.tokenInfo.address}\r\n                  name={otherToken.tokenInfo.name}\r\n                  index={index}\r\n                  symbol={otherToken.tokenInfo.symbol}\r\n                  balance={otherToken.balance}\r\n                  decimals={otherToken.tokenInfo.decimals > 0? otherToken.tokenInfo.decimals : 1}\r\n                  price={otherToken.tokenInfo.price.rate}/>\r\n\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default OtherTokenList;","import React from 'react';\r\nimport { H6 } from 'ui-neumorphism';\r\nimport OtherTokenList from \"./OtherTokenList.js\";\r\n\r\nfunction HoldersOtherHoldings(props){\r\n    /** Shows other Tokens of parent holder \r\n     *  address once UI Button is pressed **/\r\n\r\n    /* tokens are sorted based on value in descending order\r\n        calculated by custom comparison function  */\r\n\r\n    const sortedOtherTokens = props.tokens.sort(\r\n        (a,b) => {\r\n        if(a.tokenInfo.price && b.tokenInfo.price){\r\n            return ( \r\n            ( (b.balance / 10 ** b.tokenInfo.decimals ) \r\n            * b.tokenInfo.price.rate \r\n            - (a.balance / 10 ** a.tokenInfo.decimals ) \r\n            * a.tokenInfo.price.rate) \r\n            );\r\n        }\r\n        else if(a.tokenInfo.price && !b.tokenInfo.price){\r\n            return -1;\r\n        }\r\n        else if(!a.tokenInfo.price && b.tokenInfo.price){\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n        }\r\n    );\r\n\r\n    return(\r\n        <>\r\n            <H6 dark={props.darkMode}>{props.tokens.length > 1 ?\r\n                `${props.tokens.length} other Tokens held by this address`\r\n                : `${props.tokens.length} other Token held by this address`\r\n                }  \r\n            </H6>\r\n            <OtherTokenList\r\n                darkMode={props.darkMode}\r\n                otherTokens={props.tokens}/>\r\n        </>\r\n        );\r\n}\r\nexport default HoldersOtherHoldings;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card,H5,Button } from 'ui-neumorphism';\r\nimport HoldersOtherHoldings from \"./HoldersOtherHoldings.js\";\r\n\r\nfunction HolderListItem(props){\r\n    /** is showing the holder of token from address input **/\r\n    const [showOtherTokens, setShowOtherTokens] = useState(false);\r\n    const [showOtherTokensButtonPressed, setShowOtherTokensButtonPressed] = useState(false);\r\n    const [tokenHoldersOtherHoldings, setTokenHoldersOtherHoldings] = useState();\r\n    \r\n    useEffect( () => {\r\n       \r\n        /** condition to avoid the warning of hook usage before component mounting **/\r\n        let isMounted = true;\r\n        /** prevent apicall if not intended **/\r\n        if(!showOtherTokens) return ;\r\n        /** prevent apicall of wrong address or apiKey input **/\r\n        if (!props.address === \"\" || !props.address || !props.apiKey){\r\n            return ;\r\n          }\r\n        \r\n        async function getTokens(){\r\n            const addressInfoApiUrl = \r\n        `https://api.ethplorer.io/getAddressInfo/${props.address}?apiKey=${props.apiKey}`;\r\n            await axios.get(addressInfoApiUrl)\r\n              .then((addressInfoResponse) => {\r\n                  if (isMounted) setTokenHoldersOtherHoldings(addressInfoResponse.data);\r\n            })\r\n          .catch((error)=> {\r\n            props.handleNetworkError(error);\r\n          });\r\n          }\r\n\r\n        getTokens();\r\n          /** cleanup function **/\r\n        return () => { isMounted = false };\r\n       } \r\n      ,[showOtherTokens]);\r\n      \r\n    function handleShowOtherTokensButtonPressed(event){\r\n        setShowOtherTokens(!showOtherTokens);\r\n        setShowOtherTokensButtonPressed(!showOtherTokensButtonPressed);\r\n    }\r\n\r\n    const holdersBalance = (props.balance/ 10 ** props.decimals).toFixed(2);\r\n    const holdersValue = (props.price * holdersBalance).toFixed(2);\r\n\r\n    /** tokenHoldersOtherHoldings only gets accessible after first apicall  **/\r\n    /** and holders other tokens only after pressing the listitems button **/  \r\n    return(\r\n    <>\r\n      <H5 dark={props.darkMode}> #{props.index + 1} </H5>\r\n      <H5 dark={props.darkMode}> Share: {props.share} % </H5>\r\n      <H5 dark={props.darkMode}> \r\n        Tokens: {holdersBalance}\r\n      </H5>\r\n      <H5 dark={props.darkMode}> Value: {holdersValue} $ </H5>\r\n      <H5 dark={props.darkMode}> \r\n        Address: <a \r\n                  href={`https://etherscan.io/address/${props.address}`} \r\n                  target=\"_blank\">\r\n                    {props.address}\r\n                </a> \r\n      </H5>\r\n      \r\n\r\n      <Button \r\n        className=\"showOtherTokensButton\"\r\n        color={showOtherTokensButtonPressed? 'var(--black)' : 'var(--white)'}\r\n        bgColor={showOtherTokensButtonPressed? 'var(--primary-red)' : 'var(--primary)'}\r\n        dark={props.darkMode}\r\n        rounded\r\n        onClick={handleShowOtherTokensButtonPressed}> \r\n          {!showOtherTokens? \"Show Holders other tokens\" : \"Hide Holders other tokens\" } \r\n      </Button>\r\n        {tokenHoldersOtherHoldings && showOtherTokens?\r\n          <Card\r\n            flat\r\n            width={400}\r\n            dark={props.darkMode}\r\n            className=\"HoldersOtherHoldingsComponent-container\"\r\n            >\r\n              <HoldersOtherHoldings  \r\n                darkMode={props.darkMode}\r\n                tokens={tokenHoldersOtherHoldings.tokens} />   \r\n          </Card>\r\n          : \"\"\r\n          }\r\n          </>\r\n        );\r\n}\r\n\r\nexport default HolderListItem;","import React from 'react';\r\nimport { ListItemGroup,H5,ListItem } from 'ui-neumorphism';\r\nimport HolderListItem from \"./HolderListItem.js\";\r\nfunction HolderList(props){\r\n    /** Lists the top (# of) Holders of input token address  **/\r\n  \r\n\r\n  if (props.tokenHolders == null|| props.tokenInfo == null) return \"\";\r\n  return (\r\n    <>\r\n      <H5 \r\n        className='list-head'\r\n        dark={props.darkMode}>\r\n          Tokens Top {props.numHolders} Holders\r\n      </H5>\r\n\r\n      <ListItemGroup\r\n        rounded\r\n        dark={props.darkMode}\r\n        raised>\r\n                  \r\n          {props.tokenHolders.map((holder, index) => {\r\n            return(\r\n              <ListItem\r\n                className=\"ListItem-class\"\r\n                active\r\n                dark={props.darkMode}\r\n                key={index}\r\n                raised\r\n                rounded>\r\n                  <HolderListItem\r\n                    index={index}\r\n                    darkMode={props.darkMode}\r\n                    key={holder[\"address\"] + index}\r\n                    decimals={props.tokenInfo.decimals ? props.tokenInfo.decimals : \"18 \"} \r\n                    price={props.tokenInfo.price.rate ? props.tokenInfo.price.rate : \"1 \"} \r\n                    address={holder[\"address\"]}\r\n                    balance={holder[\"balance\"]}\r\n                    share={holder[\"share\"]}\r\n                    apiKey={props.apiKey}\r\n                    handleNetworkError={props.handleNetworkError}/>\r\n              </ListItem>\r\n                );\r\n              }\r\n              )\r\n            }\r\n      </ListItemGroup>\r\n    </>\r\n    );\r\n}\r\nexport default HolderList;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport 'ui-neumorphism/dist/index.css';\r\n/* UI library component imports */\r\n/* for changeTheme function:\r\n   import { overrideThemeVariables } from 'ui-neumorphism'; */\r\nimport { \r\n  Button,\r\n  Card\r\n  } from 'ui-neumorphism';\r\n\r\n/* Input Components */\r\nimport AddressInput from './components/AddressInput';\r\nimport ApiKeyInput from './components/ApiKeyInput';\r\nimport LimitHolderInput from './components/LimitHolderInput';\r\n\r\n/* Output Components */\r\nimport ErrorOutput from \"./components/ErrorOutput.js\";\r\nimport TokenInfo from \"./components/TokenInfo.js\";\r\nimport HolderList from \"./components/HolderList.js\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [tokenHolders, setTokenHolders] = useState(null);\r\n  const [input, setInput] = useState(\"\");\r\n  const [limitHolders, setLimitHolders] = useState(10);\r\n  const [apiKey, setApiKey] = useState(\"EK-nYME2-u6tTYfo-L5LES\");\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [inputTokenInfo, setInputTokenInfo] = useState(null);\r\n  \r\n  const [addressInputError, setAddressInputError] = useState(false);\r\n  const [limitInputError, setLimitInputError] = useState(false);\r\n  const [networkErrorOccured, setNetworkErrorOccured] = useState(false);\r\n  const [networkError, setNetworkError] = useState(null);\r\n\r\n  // axios request urls\r\n  const baseUrl = \"https://api.ethplorer.io\";\r\n  const tokenholdersApiUrl = () => `${baseUrl}/getTopTokenHolders/${input}?apiKey=${apiKey}&limit=${limitHolders}`;\r\n  const tokenAddressApiUrl = () => `${baseUrl}/getAddressInfo/${input}?apiKey=${apiKey}`;\r\n  const tokenHoldersRequest = () => axios.get(tokenholdersApiUrl());\r\n  const tokenAddressRequest = () => axios.get(tokenAddressApiUrl());\r\n  const tokenRequests = () => [ tokenHoldersRequest(), tokenAddressRequest() ];\r\n\r\n  const inputIsInvalid = () => addressInputError || limitInputError || networkErrorOccured\r\n\r\n  useEffect(() => {\r\n\r\n    if (inputIsInvalid() || input == \"\") return ;\r\n    let isMounted = true;\r\n\r\n    async function getTokenHoldersAndInfo() {\r\n      axios\r\n        .all(tokenRequests())\r\n        .then(axios.spread(\r\n          (holdersResponse, tokenAddressResponse) => {\r\n            if(isMounted){\r\n              setTokenHolders(holdersResponse.data.holders);\r\n              setInputTokenInfo(tokenAddressResponse.data.tokenInfo);\r\n            }\r\n            \r\n          }\r\n        )\r\n      ).catch( error => handleNetworkError(error) );\r\n    }\r\n    getTokenHoldersAndInfo();\r\n    return () => isMounted = false;\r\n  },\r\n  [input, apiKey, limitHolders]); \r\n\r\n  /** Handler Functions for Input changes and simple input validation **/\r\n  function handleTokenAddressChange(changedInput) {\r\n\t  const newInput = changedInput.event.target.value;\r\n\t  /** all ethereum token addresses are 42 characters long **/\r\n\t  if (newInput.length == 42){\r\n\t\t  setAddressInputError(false);\r\n\t\t  setInput(newInput);\r\n\t    } \r\n      else {\r\n\t\t  setAddressInputError(true);\r\n\t    }\r\n    }\r\n  \r\n  function handleApiKeyChange(changedApiKey) {\r\n\t  const newApiKey = changedApiKey.event.target.value;\r\n      setApiKey(newApiKey);\r\n    }\r\n\t\r\n  function handleLimitHoldersChange(changedLimitHolders) {\r\n\t  const newLimitHolders = changedLimitHolders.event.target.value;\r\n\t  /** parseInt converts floats to ints and returns NaN when input is string **/\r\n\t  if (parseInt(newLimitHolders) > 0 \r\n        && parseInt(newLimitHolders) <= 1000){\r\n          setLimitInputError(false);\r\n          setLimitHolders(newLimitHolders);\r\n\t  }\r\n\t  else {\r\n\t\t  setLimitInputError(true);\r\n\t    }\r\n    }\r\n\r\n  function handleNetworkError(error){\r\n    setNetworkErrorOccured(true);\r\n    setNetworkError(error);\r\n    console.log(\"NETWORK ERROR\");\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n      // http.ClientRequest in node.js\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log('Error', error.message);\r\n    }\r\n    console.log(error.config);\r\n  }\r\n  \r\n  /* function changeTheme(props){\r\n\t   // This function can be used to override css values \r\n     // requires import of the following function\r\n\t  overrideThemeVariables({\r\n      '--light-bg': '#E9B7B9'\r\n    });\r\n  } **/\r\n\t\r\n  function darkModeToggle(event) {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  return (\r\n  \r\n    <Card className=\"App\"\r\n\t    dark={darkMode}>\r\n      \r\n      <Card \r\n        dark={darkMode} \r\n        rounded={true} \r\n        width={700} \r\n        className=\"UserInput-container\">\r\n\r\n          <h1>Tokenholders Other Holdings</h1>\r\n\r\n          <Button\r\n            onClick={darkModeToggle}\r\n            rounded\r\n            depressed\r\n            color={darkMode?\"var(--white)\":\"var(--primary)\"}>\r\n              {!darkMode?\"dark-mode\":\"light-mode\"}\r\n          </Button>\r\n\r\n          <AddressInput \r\n            handleTokenAddressChange={handleTokenAddressChange}\r\n            tokenHolders={tokenHolders}\r\n          />\r\n\r\n          <Card \r\n            dark={darkMode} \r\n            rounded\r\n            flat\r\n            width={500} \r\n            className=\"InputComponent-container\">\r\n              <ApiKeyInput\r\n                apiKey={apiKey}\r\n                handleApiKeyChange={handleApiKeyChange}\r\n                tokenHolders={tokenHolders}\r\n              />\r\n          </Card>\r\n\r\n          <Card \r\n            dark={darkMode} \r\n            rounded\r\n            flat\r\n            width={500} \r\n            className=\"InputComponent-container\">\r\n              <LimitHolderInput\r\n                handleLimitHoldersChange={handleLimitHoldersChange}\r\n                tokenHolders={tokenHolders}\r\n              />\r\n          </Card>\r\n          \r\n          <Card \r\n            dark={darkMode}\r\n            width={200} \r\n            className=\"TokenInfoComponent-container\">\r\n              <TokenInfo \r\n                darkMode={darkMode}\r\n                tokenInfo={inputTokenInfo} />\r\n          </Card>\r\n\r\n          <Card \r\n            dark={darkMode}\r\n            width={300} \r\n            className=\"ErrorComponent-container\">\r\n              <ErrorOutput\r\n                darkMode={darkMode} \r\n                addressError={addressInputError} \r\n                limitError={limitInputError} \r\n                networkErrorHappened={networkErrorOccured}\r\n                networkErrorObject={networkError}\r\n                />\r\n          </Card>\r\n\r\n      </Card>\r\n\r\n      <Card \r\n        dark={darkMode} \r\n        rounded\r\n        width={700}\r\n        className=\"HolderListComponent-container\">\r\n          <HolderList\r\n            darkMode={darkMode}\r\n            tokenHolders={tokenHolders}\r\n            numHolders={limitHolders}\r\n            tokenInfo={inputTokenInfo}\r\n            apiKey={apiKey}\r\n            handleNetworkError={handleNetworkError}/>\r\n      </Card>\r\n      \r\n      <footer>\r\n          <Card \r\n            dark={darkMode} \r\n            className='footer'>\r\n              <p>Built with 💚 by <a \r\n                                    href=\"https://github.com/SimRunBot\"\r\n                                    target=\"_blank\">\r\n                                      Simon\r\n                                  </a>\r\n              </p>\r\n              <p>powered by <a \r\n                              href=\"https://Ethplorer.io\" \r\n                              target=\"_blank\">\r\n                                Ethplorer.io\r\n                            </a> \r\n              </p>\r\n            </Card>\r\n        </footer>\r\n\t  \r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}